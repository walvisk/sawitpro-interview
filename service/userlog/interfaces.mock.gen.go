// Code generated by MockGen. DO NOT EDIT.
// Source: service/userlog/interfaces.go

// Package userlog is a generated GoMock package.
package userlog

import (
	context "context"
	reflect "reflect"

	repository "github.com/SawitProRecruitment/UserService/repository"
	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CreateUserLog mocks base method.
func (m *MockService) CreateUserLog(c context.Context, u *repository.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserLog", c, u)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUserLog indicates an expected call of CreateUserLog.
func (mr *MockServiceMockRecorder) CreateUserLog(c, u interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserLog", reflect.TypeOf((*MockService)(nil).CreateUserLog), c, u)
}
