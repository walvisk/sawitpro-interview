// Code generated by MockGen. DO NOT EDIT.
// Source: service/auth/interfaces.go

// Package auth is a generated GoMock package.
package auth

import (
	reflect "reflect"

	repository "github.com/SawitProRecruitment/UserService/repository"
	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// AuthenticateUserPassword mocks base method.
func (m *MockService) AuthenticateUserPassword(arg0 *repository.User, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthenticateUserPassword", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AuthenticateUserPassword indicates an expected call of AuthenticateUserPassword.
func (mr *MockServiceMockRecorder) AuthenticateUserPassword(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthenticateUserPassword", reflect.TypeOf((*MockService)(nil).AuthenticateUserPassword), arg0, arg1)
}

// GenerateJWT mocks base method.
func (m *MockService) GenerateJWT() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateJWT")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateJWT indicates an expected call of GenerateJWT.
func (mr *MockServiceMockRecorder) GenerateJWT() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateJWT", reflect.TypeOf((*MockService)(nil).GenerateJWT))
}

// ValidateJWT mocks base method.
func (m *MockService) ValidateJWT(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateJWT", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateJWT indicates an expected call of ValidateJWT.
func (mr *MockServiceMockRecorder) ValidateJWT(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateJWT", reflect.TypeOf((*MockService)(nil).ValidateJWT), arg0)
}
